import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { MultiSelectOption } from 'src/app/models/multi-select-options';

@Component({
  selector: 'app-filters-panel',
  templateUrl: './filters-panel.component.html',
  styleUrls: ['./filters-panel.component.css']
})
export class FiltersPanelComponent implements OnInit {
  regulations: MultiSelectOption[] = [];
  reportableDatasets: MultiSelectOption[] = [];
  reportableFields: MultiSelectOption[] = [];
  assetClasses: MultiSelectOption[] = [];
  productType: MultiSelectOption[] = [];
  
  selectedRegulations: MultiSelectOption[] = [];
  selectedReportableDatasets: MultiSelectOption[] = [];
  selectedReportableFields: MultiSelectOption[] = [];
  selectedAssetClasses: MultiSelectOption[] = [];
  selectedProductType: MultiSelectOption[] = [];

  private filtersJsonUrl = 'assets/mock-data/response/json1_filters.json';
  private resultsJsonUrl = 'assets/mock-data/response/results.json'; // URL to fetch the results based on the filters

  constructor(private http: HttpClient) { }

  ngOnInit(): void {
    this.loadFiltersData();
  }

  // Load filter options data from JSON
  loadFiltersData(): void {
    this.http.get<any>(this.filtersJsonUrl).subscribe(data => {
      this.regulations = data.data.regulations.map((item: any) => ({
        id: item.id, name: item.name, displayName: item.displayName, selected: false
      }));
      this.reportableDatasets = data.data.reportableDataset.map((item: any) => ({
        id: item.id, name: item.name, displayName: item.displayName, selected: false
      }));
      this.reportableFields = data.data.reportableField.map((item: any) => ({
        id: item.id, name: item.name, displayName: item.displayName, selected: false
      }));
      this.assetClasses = data.data.assetClasses.map((item: any) => ({
        id: item.id, name: item.name, displayName: item.displayName, selected: false
      }));
      this.productType = data.data.productType.map((item: any) => ({
        id: item.id, name: item.name, displayName: item.displayName, selected: false
      }));
    });
  }

  // Handle the search button click
  onSearch(): void {
    const selectedFilters = {
      regulations: this.selectedRegulations.map(option => option.name),
      reportableDatasets: this.selectedReportableDatasets.map(option => option.name),
      reportableFields: this.selectedReportableFields.map(option => option.name),
      assetClasses: this.selectedAssetClasses.map(option => option.name),
      productType: this.selectedProductType.map(option => option.name)
    };

    console.log('Selected Filters:', selectedFilters); // Testing: Print selected filters

    // Make an HTTP call to fetch the results based on the selected filters
    this.http.get<any>(this.resultsJsonUrl).subscribe(response => {
      console.log('Response from server:', response);

      // Filter the results based on selected filters
      const filteredResults = response.data.filter((item: any) => 
        selectedFilters.regulations.includes(item.regulationName) &&
        selectedFilters.assetClasses.includes(item.assetClass) &&
        selectedFilters.productType.includes(item.productType)
      );

      console.log('Filtered Results:', filteredResults); // Output the filtered results
    });
  }

  // Handle the reset button click
  onReset(): void {
    this.selectedRegulations = [];
    this.selectedReportableDatasets = [];
    this.selectedReportableFields = [];
    this.selectedAssetClasses = [];
    this.selectedProductType = [];

    console.log('Filters reset!');
  }
}



<div class="filters-panel">
  <app-multi-select
    [options]="regulations"
    [(ngModel)]="selectedRegulations"
    label="Regulations">
  </app-multi-select>

  <app-multi-select
    [options]="reportableDatasets"
    [(ngModel)]="selectedReportableDatasets"
    label="Reportable Datasets">
  </app-multi-select>

  <app-multi-select
    [options]="reportableFields"
    [(ngModel)]="selectedReportableFields"
    label="Reportable Fields">
  </app-multi-select>

  <app-multi-select
    [options]="assetClasses"
    [(ngModel)]="selectedAssetClasses"
    label="Asset Classes">
  </app-multi-select>

  <app-multi-select
    [options]="productType"
    [(ngModel)]="selectedProductType"
    label="Product Type">
  </app-multi-select>

  <!-- Add a date picker -->
  <div class="date-picker">
    <label for="date">Date:</label>
    <input type="date" id="date" [(ngModel)]="selectedDate">
  </div>

  <!-- Search and Reset Buttons -->
  <div class="button-group">
    <button (click)="onSearch()">Search</button>
    <button (click)="onReset()">Reset</button>
  </div>
</div>
