import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { MultiSelectOption } from './models/multi-select-options';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-filters-panel',
  standalone: true,
  templateUrl: './filters-panel.component.html',
  styleUrls: ['./filters-panel.component.css'],
  imports: [FormsModule]
})
export class FiltersPanelComponent implements OnInit {
  regulations: MultiSelectOption[] = [];
  reportableDatasets: MultiSelectOption[] = [];
  reportableFields: MultiSelectOption[] = [];
  assetClasses: MultiSelectOption[] = [];
  productType: MultiSelectOption[] = [];

  selectedRegulations: MultiSelectOption[] = [];
  selectedReportableDatasets: MultiSelectOption[] = [];
  selectedReportableFields: MultiSelectOption[] = [];
  selectedAssetClasses: MultiSelectOption[] = [];
  selectedProductType: MultiSelectOption[] = [];

  selectedDate: string = ''; // Date selected by user

  private jsonUrl = 'assets/mock-data/response/json1_filters.json'; // Your JSON data path

  constructor(private http: HttpClient) {}

  ngOnInit(): void {
    this.loadFiltersData();
  }

  loadFiltersData(): void {
    this.http.get<any>(this.jsonUrl).subscribe(data => {
      this.regulations = data.data.regulations.map((item: any) => ({
        id: item.id,
        name: item.name,
        displayName: item.displayName,
        selected: false
      }));
      this.reportableDatasets = data.data.reportableDatasets.map((item: any) => ({
        id: item.id,
        name: item.name,
        displayName: item.displayName,
        selected: false
      }));
      this.reportableFields = data.data.reportableFields.map((item: any) => ({
        id: item.id,
        name: item.name,
        displayName: item.displayName,
        selected: false
      }));
      this.assetClasses = data.data.assetClasses.map((item: any) => ({
        id: item.id,
        name: item.name,
        displayName: item.displayName,
        selected: false
      }));
      this.productType = data.data.productType.map((item: any) => ({
        id: item.id,
        name: item.name,
        displayName: item.displayName,
        selected: false
      }));
    });
  }

  // Search functionality: logs selected filters
  searchFilters(): void {
    console.log('Selected Regulations:', this.selectedRegulations);
    console.log('Selected Reportable Datasets:', this.selectedReportableDatasets);
    console.log('Selected Reportable Fields:', this.selectedReportableFields);
    console.log('Selected Asset Classes:', this.selectedAssetClasses);
    console.log('Selected Product Types:', this.selectedProductType);
    console.log('Selected Date:', this.selectedDate);
  }

  // Reset functionality: clears all filters and date
  resetFilters(): void {
    this.selectedRegulations = [];
    this.selectedReportableDatasets = [];
    this.selectedReportableFields = [];
    this.selectedAssetClasses = [];
    this.selectedProductType = [];
    this.selectedDate = '';

    // Reset the selected property in each option
    this.regulations.forEach(option => (option.selected = false));
    this.reportableDatasets.forEach(option => (option.selected = false));
    this.reportableFields.forEach(option => (option.selected = false));
    this.assetClasses.forEach(option => (option.selected = false));
    this.productType.forEach(option => (option.selected = false));
  }
}




<div class="filter-container">
  <!-- Date Picker -->
  <label for="date">Select Date:</label>
  <input type="date" id="date" [(ngModel)]="selectedDate" />

  <!-- Dropdowns for filters -->
  <app-multi-select
    [options]="regulations"
    [(ngModel)]="selectedRegulations"
    label="Regulations">
  </app-multi-select>

  <app-multi-select
    [options]="reportableDatasets"
    [(ngModel)]="selectedReportableDatasets"
    label="Reportable Datasets">
  </app-multi-select>

  <app-multi-select
    [options]="reportableFields"
    [(ngModel)]="selectedReportableFields"
    label="Reportable Fields">
  </app-multi-select>

  <app-multi-select
    [options]="assetClasses"
    [(ngModel)]="selectedAssetClasses"
    label="Asset Classes">
  </app-multi-select>

  <app-multi-select
    [options]="productType"
    [(ngModel)]="selectedProductType"
    label="Product Type">
  </app-multi-select>

  <!-- Search and Reset Buttons -->
  <div class="actions-container">
    <button (click)="searchFilters()">Search</button>
    <button (click)="resetFilters()">Reset</button>
  </div>
</div>

