import tkinter as tk
from tkinter import messagebox
import subprocess
import platform
import os

def run_shell_script():
    """Fetches user input and runs the shell script with those parameters."""
    asset_class = asset_class_var.get().strip()
    jurisdiction = jurisdiction_var.get().strip()
    recon_type = recon_type_var.get().strip()
    recon_date = recon_date_entry.get().strip()

    # Validate inputs
    if not asset_class or not jurisdiction or not recon_type or not recon_date:
        messagebox.showerror("Input Error", "All fields are required!")
        return
    
    if not recon_date.isdigit() or len(recon_date) != 6:
        messagebox.showerror("Date Error", "Please enter a valid date in YYMMDD format!")
        return
    
    # Command for the shell script
    script_name = "recon_automation.sh"
    command = ["sh", script_name, asset_class, jurisdiction, recon_type, recon_date]

    # Run the script
    try:
        if platform.system() == "Windows":
            # Adjust command for Windows
            command[0] = "bash"

        result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
        if result.returncode == 0:
            messagebox.showinfo("Success", f"Script executed successfully:\n{result.stdout}")
        else:
            messagebox.showerror("Error", f"Script failed with error:\n{result.stderr}")
    except FileNotFoundError:
        messagebox.showerror("Error", f"Shell script '{script_name}' not found!")
    except Exception as e:
        messagebox.showerror("Error", f"An unexpected error occurred:\n{str(e)}")

# Initialize the Tkinter application
root = tk.Tk()
root.title("Recon Automation UI")
root.geometry("400x300")

# Asset Class
tk.Label(root, text="Asset Class (e.g., FX, IR):").pack(pady=5)
asset_class_var = tk.StringVar()
tk.Entry(root, textvariable=asset_class_var).pack(pady=5)

# Jurisdiction
tk.Label(root, text="Jurisdiction (e.g., JFSA, CANADA):").pack(pady=5)
jurisdiction_var = tk.StringVar()
tk.Entry(root, textvariable=jurisdiction_var).pack(pady=5)

# Recon Type
tk.Label(root, text="Recon Type (COMP or POS):").pack(pady=5)
recon_type_var = tk.StringVar()
tk.Entry(root, textvariable=recon_type_var).pack(pady=5)

# Recon Date
tk.Label(root, text="Recon Date (YYMMDD):").pack(pady=5)
recon_date_entry = tk.Entry(root)
recon_date_entry.pack(pady=5)

# Submit Button
tk.Button(root, text="Run Script", command=run_shell_script, bg="green", fg="white").pack(pady=20)

# Run the Tkinter event loop
root.mainloop()
