import os
import subprocess
from flask import Flask, render_template, request, jsonify

app = Flask(__name__)

@app.route('/')
def index():
    """Render the form UI."""
    return render_template('index.html')

@app.route('/execute', methods=['POST'])
def execute_script():
    """Handle form submission and execute the shell script."""
    # Retrieve form data
    asset_class = request.form.get('asset_class')
    jurisdiction = request.form.get('jurisdiction')
    recon_type = request.form.get('recon_type')
    recon_date = request.form.get('recon_date')

    # Validate inputs
    if not all([asset_class, jurisdiction, recon_type, recon_date]):
        return jsonify({"error": "All fields are required!"}), 400

    # Build the command to execute the shell script
    command = f"sh recon_automation.sh {asset_class} {jurisdiction} {recon_type} {recon_date}"
    
    # Cross-platform execution
    try:
        if os.name == 'nt':  # Windows
            result = subprocess.run(
                ["bash", "-c", command],
                capture_output=True,
                text=True,
                check=True,
            )
        else:  # Linux or MacOS
            result = subprocess.run(
                command,
                shell=True,
                capture_output=True,
                text=True,
                check=True,
            )
        
        # Return the result to the user
        return jsonify({"output": result.stdout, "error": result.stderr})
    except subprocess.CalledProcessError as e:
        return jsonify({"error": e.stderr or str(e)}), 500

if __name__ == "__main__":
    app.run(debug=True)











<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recon Automation</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='style.css') }}">
</head>
<body>
    <h1>Recon Automation</h1>
    <form id="recon-form" action="/execute" method="post">
        <label for="asset_class">Asset Class:</label>
        <select name="asset_class" id="asset_class" required>
            <option value="FX">FX</option>
            <option value="IR">IR</option>
            <option value="EQ">EQ</option>
            <option value="CO">CO</option>
            <option value="CD">CD</option>
        </select><br>

        <label for="jurisdiction">Jurisdiction:</label>
        <select name="jurisdiction" id="jurisdiction" required>
            <option value="JFSA">JFSA</option>
            <option value="CANADA">CANADA</option>
            <option value="MAS">MAS</option>
            <option value="MAS TA">MAS TA</option>
            <option value="HKMA">HKMA</option>
            <option value="HKTR">HKTR</option>
            <option value="ESMA">ESMA</option>
            <option value="CFTC">CFTC</option>
            <option value="ASIC">ASIC</option>
            <option value="SEC">SEC</option>
        </select><br>

        <label for="recon_type">Recon Type:</label>
        <select name="recon_type" id="recon_type" required>
            <option value="COMP">COMP</option>
            <option value="POS">POS</option>
        </select><br>

        <label for="recon_date">Recon Date:</label>
        <input type="date" name="recon_date" id="recon_date" required><br>

        <button type="submit">Run Script</button>
    </form>

    <div id="result"></div>

    <script>
        document.getElementById('recon-form').onsubmit = async function (event) {
            event.preventDefault();

            const formData = new FormData(event.target);
            const response = await fetch('/execute', {
                method: 'POST',
                body: formData,
            });

            const resultDiv = document.getElementById('result');
            resultDiv.innerHTML = "";

            if (response.ok) {
                const result = await response.json();
                resultDiv.innerHTML = `<pre>${result.output}</pre>`;
            } else {
                const error = await response.json();
                resultDiv.innerHTML = `<pre>Error: ${error.error}</pre>`;
            }
        };
    </script>
</body>
</html>
