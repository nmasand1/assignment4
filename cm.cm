import streamlit as st
import subprocess
import platform
from datetime import datetime

# App Title
st.title("Recon Automation Script")

# Input Fields
asset_class = st.selectbox(
    "Select Asset Class",
    ["FX", "IR", "EQ", "CO", "CD"],
    help="Choose the appropriate asset class."
)

jurisdiction = st.selectbox(
    "Select Jurisdiction",
    [
        "JFSA", "CANADA", "MAS", "MAS TA", "HKMA", "HKTR", "ESMA",
        "MAS ASIC", "CFTC", "ASIC", "SEC", "FCA", "ASIC TA", "DSMATCH"
    ],
    help="Choose the appropriate jurisdiction."
)

recon_type = st.selectbox(
    "Select Recon Type",
    ["COMP", "POS"],
    help="Choose the type of reconciliation."
)

recon_date = st.date_input(
    "Select Recon Date",
    value=datetime.today(),
    help="Pick the recon date."
)

# Format the recon_date into the required format (YYMMDD)
formatted_date = recon_date.strftime("%y%m%d")

# Button to Trigger Script
if st.button("Run Script"):
    # Construct Command
    command = f"sh recon_automation.sh {asset_class} {jurisdiction} {recon_type} {formatted_date}"
    
    # OS Detection
    is_windows = platform.system() == "Windows"
    
    if is_windows:
        # On Windows, use WSL for running the shell script
        command = f"wsl {command}"
    
    st.write("Running Command: ", command)
    
    try:
        # Run the shell script
        result = subprocess.run(command, shell=True, capture_output=True, text=True)
        
        # Display Output
        if result.returncode == 0:
            st.success("Script executed successfully!")
            st.text("Output:")
            st.text(result.stdout)
        else:
            st.error("Script failed!")
            st.text("Error:")
            st.text(result.stderr)
    except Exception as e:
        st.error(f"An error occurred: {e}")
