import os
import subprocess
import tkinter as tk
from tkinter import messagebox
from tkinter import ttk
from tkcalendar import DateEntry  # Install tkcalendar if not already installed


def execute_script():
    asset_class = asset_class_var.get()
    jurisdiction = jurisdiction_var.get()
    recon_type = recon_type_var.get()
    recon_date = date_picker.get_date().strftime("%y%m%d")

    if not asset_class or not jurisdiction or not recon_type:
        messagebox.showerror("Input Error", "Please fill all fields.")
        return

    script_path = "recon_automation.sh"  # Adjust path if script is not in the current directory

    if not os.path.exists(script_path):
        messagebox.showerror("Script Error", f"Script not found: {script_path}")
        return

    # Construct command to execute the script
    command = ["sh", script_path, asset_class, jurisdiction, recon_type, recon_date]
    try:
        # Execute the shell script
        result = subprocess.run(command, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)

        if result.returncode == 0:
            messagebox.showinfo("Success", f"Script executed successfully:\n{result.stdout}")
        else:
            messagebox.showerror("Script Error", f"Error executing script:\n{result.stderr}")
    except Exception as e:
        messagebox.showerror("Execution Error", f"Failed to execute script: {str(e)}")


# GUI setup
root = tk.Tk()
root.title("Recon Automation")

# Labels and Input Fields
tk.Label(root, text="Asset Class:").grid(row=0, column=0, padx=10, pady=10, sticky="e")
asset_class_var = tk.StringVar()
asset_class_entry = ttk.Combobox(
    root, textvariable=asset_class_var, values=["FX", "IR", "EQ", "CO", "CD"]
)
asset_class_entry.grid(row=0, column=1, padx=10, pady=10)

tk.Label(root, text="Jurisdiction:").grid(row=1, column=0, padx=10, pady=10, sticky="e")
jurisdiction_var = tk.StringVar()
jurisdiction_entry = ttk.Combobox(
    root,
    textvariable=jurisdiction_var,
    values=[
        "JFSA", "CANADA", "MAS", "MAS TA", "HKMA", "HKTR", "ESMA",
        "MAS ASIC", "CFTC", "ASIC", "SEC", "FCA", "ASIC TA", "DSMATCH"
    ],
)
jurisdiction_entry.grid(row=1, column=1, padx=10, pady=10)

tk.Label(root, text="Recon Type:").grid(row=2, column=0, padx=10, pady=10, sticky="e")
recon_type_var = tk.StringVar()
recon_type_entry = ttk.Combobox(root, textvariable=recon_type_var, values=["COMP", "POS"])
recon_type_entry.grid(row=2, column=1, padx=10, pady=10)

tk.Label(root, text="Recon Date:").grid(row=3, column=0, padx=10, pady=10, sticky="e")
date_picker = DateEntry(root, date_pattern="yymmdd")
date_picker.grid(row=3, column=1, padx=10, pady=10)

# Submit Button
submit_btn = tk.Button(root, text="Run Script", command=execute_script)
submit_btn.grid(row=4, column=0, columnspan=2, pady=20)

# Adjust window size
root.geometry("400x250")
root.mainloop()
