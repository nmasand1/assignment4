from flask import Flask, request, render_template, jsonify
import subprocess
import os

app = Flask(__name__)

# Set the path for your shell script
SHELL_SCRIPT_PATH = 'path/to/your/script.sh'

@app.route('/')
def home():
    # Render the HTML form (index.html)
    return render_template('index.html')

@app.route('/run_script', methods=['POST'])
def run_script():
    try:
        # Get form data
        asset_class = request.form.get('assetClass')
        jurisdiction = request.form.get('jurisdiction')
        recon_type = request.form.get('reconType')
        recon_date = request.form.get('reconDate')

        # Debug: Log the form data
        print(f"Received data: assetClass={asset_class}, jurisdiction={jurisdiction}, reconType={recon_type}, reconDate={recon_date}")

        # Check for missing parameters
        missing = []
        if not asset_class:
            missing.append("assetClass")
        if not jurisdiction:
            missing.append("jurisdiction")
        if not recon_type:
            missing.append("reconType")
        if not recon_date:
            missing.append("reconDate")

        # If any parameter is missing, return an error response
        if missing:
            return jsonify({"error": f"Missing required parameters: {', '.join(missing)}"}), 400

        # Execute the shell script with the given parameters
        command = [SHELL_SCRIPT_PATH, asset_class, jurisdiction, recon_type, recon_date]
        result = subprocess.run(command, capture_output=True, text=True)

        # Check the result of the script execution
        if result.returncode == 0:
            return jsonify({"message": "Script executed successfully", "output": result.stdout}), 200
        else:
            return jsonify({"error": "Script failed", "output": result.stderr}), 500

    except Exception as e:
        # If there is an error during execution, return the error message
        return jsonify({"error": f"An error occurred: {str(e)}"}), 500

if __name__ == '__main__':
    app.run(debug=True)
