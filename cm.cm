from flask import Flask, request, render_template
import subprocess
import datetime

app = Flask(__name__)

# Path to your HTML file
PUBLIC_ENTRY = 'templates/SystemReconReplayUI.html'

@app.route('/system/recon/replay', methods=['GET'])
def replay_ui():
    try:
        return render_template('SystemReconReplayUI.html')
    except Exception as e:
        return f"Error loading the page: {e}", 500

@app.route('/system/recon/replay', methods=['POST'])
def handle_post():
    now = datetime.datetime.now()
    print("Recon Automation Framework :: Recon Data Loading Started ::", now.strftime("%Y-%m-%d %H:%M:%S"))
    
    fields = request.form
    assetClass = fields.get('assetClass', '').strip()
    jurisdiction = fields.get('jurisdiction', '').strip()
    reconDate = fields.get('reconDate', '').strip()
    flowType = fields.get('flowType', '').strip().lower()
    
    print('assetClass:', assetClass)
    print('jurisdiction:', jurisdiction)
    print('reconDate:', reconDate)
    print('flowType:', flowType)

    try:
        if flowType == "onereg":
            result = subprocess.check_output(
                f"sh /apps/TTR/uat2/OneReg/OneRegReconciler/UnixScript/Recon_Automation/loadOneRegData.sh {assetClass} {jurisdiction} {reconDate}",
                shell=True
            )
            response = "Request Processed Successfully: OneRegLoading"
        elif flowType == "file":
            result = subprocess.check_output(
                f"sh /apps/TTR/uat2/OneReg/OneRegReconciler/UnixScript/Recon_Automation/loadFileData.sh {assetClass} {jurisdiction} {reconDate}",
                shell=True
            )
            response = "Request Processed Successfully: FileLoading"
        else:
            response = "Request Process Failed: Invalid flowType provided"
    except subprocess.CalledProcessError as e:
        response = f"Request Process Failed: {e.output.decode()}"
        print("Error code:", e.returncode, e.output.decode())

    enow = datetime.datetime.now()
    print("Recon Automation Framework :: Recon Data Loading Ended ::", enow.strftime("%Y-%m-%d %H:%M:%S"))
    
    return response, 200

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=8129, debug=True)  # Enable debug mode
