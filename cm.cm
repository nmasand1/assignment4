loadJiraFieldData() {
  this.lighthouseApiService.fetchJiraDetails().subscribe(
    data => {
      console.log('JIRA DATA:', data);
      this.jiraFieldData = data.map(item => {
        const descriptionSections = this.parseDescription(item.description);
        return { ...item, descriptionSections };
      });
    },
    error => {
      console.log('Error loading JIRA data:', error);
    }
  );
}

// Helper function to parse the description field
private parseDescription(description: string): any {
  const sections = {
    operationsRequirements: '',
    technologyRequirements: ''
  };

  // Regex to identify sections within the description
  const operationsMatch = description.match(/\*Operations Requirements:\*\s*([\s\S]*?)(?=\*Technology Requirements:|\*|$)/);
  const technologyMatch = description.match(/\*Technology Requirements:\*\s*([\s\S]*?)(?=\*|$)/);

  if (operationsMatch) {
    sections.operationsRequirements = operationsMatch[1].trim();
  }
  if (technologyMatch) {
    sections.technologyRequirements = technologyMatch[1].trim();
  }

  return sections;
}

<!-- JIRA Details Rendering -->
<div *ngFor="let item of jiraFieldData; let i = index" class="jira-details" [class.active]="i === selectedTabIndex">
  <h3>Details for JIRA: {{ item.key }}</h3>
  <p><strong>Type:</strong> {{ item.type }}</p>
  <p><strong>Status:</strong> {{ item.status }}</p>
  <p><strong>Summary:</strong> {{ item.summary }}</p>
  <p><strong>Reporter:</strong> {{ item.reporter }}</p>
  <p><strong>Labels:</strong> {{ item.labels }}</p>
  <p><strong>Created Date:</strong> {{ item.createdDate }}</p>
  
  <!-- Render Operations Requirements and Technology Requirements -->
  <div *ngIf="item.descriptionSections.operationsRequirements">
    <h4>Operations Requirements:</h4>
    <p>{{ item.descriptionSections.operationsRequirements }}</p>
  </div>
  <div *ngIf="item.descriptionSections.technologyRequirements">
    <h4>Technology Requirements:</h4>
    <p>{{ item.descriptionSections.technologyRequirements }}</p>
  </div>
</div>
