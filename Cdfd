<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recon Automation Framework</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f9;
        }
        h1 {
            text-align: center;
            color: #4CAF50;
        }
        h2 {
            color: #333;
        }
        form {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            margin: 0 auto;
        }
        label {
            font-weight: bold;
            display: block;
            margin-bottom: 6px;
            color: #333;
        }
        select, input[type="date"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
        }
        .response, .file-list {
            margin-top: 20px;
            padding: 15px;
            background-color: #fff;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            max-width: 600px;
            margin: 20px auto;
        }
        .file-list ul {
            list-style-type: none;
            padding: 0;
        }
        .file-list li {
            padding: 8px;
            border-bottom: 1px solid #ddd;
        }
        .file-list li a {
            color: #4CAF50;
            text-decoration: none;
        }
        .file-list li a:hover {
            text-decoration: underline;
        }
        .response p {
            font-size: 16px;
            color: #333;
        }

        /* Style for the custom multiselect dropdown */
        #jurisdiction {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ddd;
            font-size: 14px;
            background-color: #fff;
            color: #333;
            box-sizing: border-box;
            height: auto;
            display: block;
            margin-bottom: 15px;
        }

        /* Style for multiselect dropdown options */
        .multiselect-container {
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .multiselect-container select {
            display: none;  /* Hide the original select */
        }

        .multiselect-dropdown {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ddd;
            background-color: #fff;
            display: block;
            cursor: pointer;
        }

        .multiselect-dropdown ul {
            list-style: none;
            padding: 0;
            margin: 0;
            position: absolute;
            z-index: 10;
            background-color: white;
            border: 1px solid #ddd;
            display: none;
            width: 100%;
            max-height: 200px;
            overflow-y: auto;
        }

        .multiselect-dropdown ul li {
            padding: 10px;
            cursor: pointer;
        }

        .multiselect-dropdown ul li:hover {
            background-color: #f1f1f1;
        }

        .multiselect-dropdown ul li input[type="checkbox"] {
            margin-right: 10px;
        }

        /* Active state of the dropdown */
        .multiselect-container.open .multiselect-dropdown ul {
            display: block;
        }
    </style>
</head>
<body>

<h1>Recon Automation Framework</h1>

<form action="/recon" method="POST">
    <label for="assetClass">Asset Class: </label>
    <select id="assetClass" name="assetClass" required>
        {% for asset_class in asset_classes %}
            <option value="{{ asset_class }}">{{ asset_class }}</option>
        {% endfor %}
    </select>

    <label for="reconType">Recon Type: </label>
    <select id="reconType" name="reconType" required>
        {% for recon_type in recon_types %}
            <option value="{{ recon_type }}">{{ recon_type }}</option>
        {% endfor %}
    </select>

    <label for="reconDate">Recon Date: </label>
    <input type="date" id="reconDate" name="reconDate" required>

    <label for="flowType">Flow Type: </label>
    <select id="flowType" name="flowType" required>
        <option value="file">File</option>
        <option value="onereg">OneReg</option>
    </select>

    <!-- Custom Jurisdiction Multiselect Dropdown -->
    <div class="multiselect-container" id="jurisdiction-dropdown">
        <label for="jurisdiction">Jurisdiction: </label>
        <div class="multiselect-dropdown" id="jurisdictionDropdown">
            <span>Select Jurisdictions</span>
        </div>
        <select id="jurisdiction" name="jurisdiction" required multiple>
            {% for jurisdiction in jurisdictions %}
                {% if jurisdiction != 'TRAXCASH' and jurisdiction != 'TRAXNONCASH' and jurisdiction != 'TRAXNONCASHOTC' %}
                    <option value="{{ jurisdiction }}">{{ jurisdiction }}</option>
                {% endif %}
            {% endfor %}
        </select>
    </div>

    <input type="submit" value="Submit">
</form>

<div class="response">
    <h2>Response: </h2>
    <p>{{ response | safe }}</p>
</div>

<div class="file-list">
    <h2>Generated Files: </h2>
    {% if file_paths %}
        <ul>
            {% for file, path in file_paths %}
                <li><strong>{{ file }}</strong>: <a href="/download/{{ path }}" download>{{ file }}</a></li>
            {% endfor %}
        </ul>
    {% else %}
        <p>No files generated yet.</p>
    {% endif %}
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const jurisdictionDropdown = document.getElementById('jurisdictionDropdown');
        const jurisdictionSelect = document.getElementById('jurisdiction');
        const jurisdictionOptions = jurisdictionSelect.querySelectorAll('option');
        const multiselectContainer = document.querySelector('.multiselect-container');

        jurisdictionDropdown.addEventListener('click', () => {
            multiselectContainer.classList.toggle('open');
        });

        jurisdictionOptions.forEach(option => {
            option.addEventListener('change', () => {
                const selectedOptions = Array.from(jurisdictionSelect.selectedOptions);
                const selectedNames = selectedOptions.map(opt => opt.text).join(', ');
                jurisdictionDropdown.querySelector('span').textContent = selectedNames || 'Select Jurisdictions';
            });
        });
    });
</script>

</body>
</html>
