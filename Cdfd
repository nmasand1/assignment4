<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recon Automation Framework</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f9;
        }
        h1 {
            text-align: center;
            color: #4CAF50;
        }
        h2 {
            color: #333;
        }
        form {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            margin: 0 auto;
        }
        label {
            font-weight: bold;
            display: block;
            margin-bottom: 6px;
            color: #333;
        }
        select, input[type="date"] {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
        }
        .response, .file-list {
            margin-top: 20px;
            padding: 15px;
            background-color: #fff;
            box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            max-width: 600px;
            margin: 20px auto;
        }
        .file-list ul {
            list-style-type: none;
            padding: 0;
        }
        .file-list li {
            padding: 8px;
            border-bottom: 1px solid #ddd;
        }
        .file-list li a {
            color: #4CAF50;
            text-decoration: none;
        }
        .file-list li a:hover {
            text-decoration: underline;
        }
        .response p {
            font-size: 16px;
            color: #333;
        }

        /* Style for the multiselect dropdown */
        #jurisdiction {
            height: 150px;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ddd;
            font-size: 14px;
            background-color: #fff;
            color: #333;
            box-sizing: border-box;
            overflow: auto;
        }

        #jurisdiction option {
            padding: 8px;
            background-color: #f9f9f9;
            margin: 2px 0;
            border-radius: 5px;
        }

        #jurisdiction option:checked {
            background-color: #4CAF50;
            color: white;
        }

        /* Style for checkboxes when displayed */
        .checkbox-group input[type="checkbox"] {
            margin-right: 10px;
        }

        .checkbox-group label {
            font-size: 14px;
            margin-bottom: 10px;
            display: block;
        }
    </style>
</head>
<body>

<h1>Recon Automation Framework</h1>

<form action="/recon" method="POST">
    <label for="assetClass">Asset Class: </label>
    <select id="assetClass" name="assetClass" required>
        {% for asset_class in asset_classes %}
            <option value="{{ asset_class }}">{{ asset_class }}</option>
        {% endfor %}
    </select>

    <label for="reconType">Recon Type: </label>
    <select id="reconType" name="reconType" required>
        {% for recon_type in recon_types %}
            <option value="{{ recon_type }}">{{ recon_type }}</option>
        {% endfor %}
    </select>

    <label for="reconDate">Recon Date: </label>
    <input type="date" id="reconDate" name="reconDate" required>

    <label for="flowType">Flow Type: </label>
    <select id="flowType" name="flowType" required>
        <option value="file">File</option>
        <option value="onereg">OneReg</option>
    </select>

    <!-- Jurisdiction Dropdown -->
    <div id="jurisdiction-dropdown">
        <label for="jurisdiction">Jurisdiction: </label>
        <select id="jurisdiction" name="jurisdiction" required multiple>
            {% for jurisdiction in jurisdictions %}
                <option value="{{ jurisdiction }}">{{ jurisdiction }}</option>
            {% endfor %}
        </select>
    </div>

    <!-- Jurisdiction Checkboxes -->
    <div id="jurisdiction-checkbox-container" style="display: none;">
        <label>Jurisdiction: </label>
        <div class="checkbox-group">
            {% for jurisdiction in jurisdictions %}
                <input type="checkbox" name="jurisdiction" value="{{ jurisdiction }}"> {{ jurisdiction }}<br>
            {% endfor %}
        </div>
    </div>

    <input type="submit" value="Submit">
</form>

<div class="response">
    <h2>Response: </h2>
    <p>{{ response | safe }}</p>
</div>

<div class="file-list">
    <h2>Generated Files: </h2>
    {% if file_paths %}
        <ul>
            {% for file, path in file_paths %}
                <li><strong>{{ file }}</strong>: <a href="/download/{{ path }}" download>{{ file }}</a></li>
            {% endfor %}
        </ul>
    {% else %}
        <p>No files generated yet.</p>
    {% endif %}
</div>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const flowTypeSelect = document.getElementById("flowType");
        const jurisdictionSelect = document.getElementById("jurisdiction");
        const jurisdictionCheckboxContainer = document.getElementById("jurisdiction-checkbox-container");
        const assetClassSelect = document.getElementById("assetClass");

        flowTypeSelect.addEventListener("change", () => {
            const flowType = flowTypeSelect.value;
            const selectedAssetClass = assetClassSelect.value;

            if (flowType === "onereg" && selectedAssetClass === "TRAX") {
                jurisdictionCheckboxContainer.style.display = "none";
                jurisdictionSelect.style.display = "block";
                jurisdictionSelect.innerHTML = `
                    <option value="TRAXCASH">TRAXCASH</option>
                    <option value="TRAXNONCASH">TRAXNONCASH</option>
                    <option value="TRAXNONCASHOTC">TRAXNONCASHOTC</option>
                `;
            } else if (flowType === "file" && selectedAssetClass === "TRAX") {
                jurisdictionCheckboxContainer.style.display = "none";
                jurisdictionSelect.style.display = "block";
                jurisdictionSelect.innerHTML = `
                    <option value="TRAX">TRAX</option>
                `;
            } else {
                jurisdictionSelect.style.display = "block";
                jurisdictionCheckboxContainer.style.display = "none";
                jurisdictionSelect.setAttribute("multiple", "multiple");
                jurisdictionSelect.innerHTML = `
                    {% for jurisdiction in jurisdictions %}
                        {% if jurisdiction !== 'TRAXCASH' && jurisdiction !== 'TRAXNONCASH' && jurisdiction !== 'TRAXNONCASHOTC' %}
                            <option value="{{ jurisdiction }}">{{ jurisdiction }}</option>
                        {% endif %}
                    {% endfor %}
                `;
            }
        });

        assetClassSelect.addEventListener("change", () => {
            const flowType = flowTypeSelect.value;
            const selectedAssetClass = assetClassSelect.value;

            if (selectedAssetClass === "TRAX" && flowType === "onereg") {
                jurisdictionCheckboxContainer.style.display = "none";
                jurisdictionSelect.style.display = "block";
                jurisdictionSelect.innerHTML = `
                    <option value="TRAXCASH">TRAXCASH</option>
                    <option value="TRAXNONCASH">TRAXNONCASH</option>
                    <option value="TRAXNONCASHOTC">TRAXNONCASHOTC</option>
                `;
            } else if (selectedAssetClass === "TRAX" && flowType === "file") {
                jurisdictionCheckboxContainer.style.display = "none";
                jurisdictionSelect.style.display = "block";
                jurisdictionSelect.innerHTML = `
                    <option value="TRAX">TRAX</option>
                `;
            } else {
                jurisdictionSelect.style.display = "block";
                jurisdictionCheckboxContainer.style.display = "none";
            }
        });
    });
</script>

</body>
</html>
