from lxml import etree

def extract_summitTTSProductCode(xml_string):
    """
    Extracts the summitTTSProductCode value from the given XML string.
    This version ignores namespaces and attempts to clean malformed XML.
    """
    try:
        # Parse the XML, with recovery for malformed XML
        parser = etree.XMLParser(recover=True)
        root = etree.fromstring(xml_string.encode(), parser=parser)

        # Ignore namespaces and find 'summitTTSProductCode' in the tree
        summit_code = root.xpath(".//*[local-name()='summitTTSProductCode']")
        if summit_code:
            return summit_code[0].text
        else:
            print("summitTTSProductCode not found in this XML.")
            return None
    except Exception as e:
        print(f"Error processing XML: {e}")
        return None


# Test with your XML input
test_xml = '''<BCTrade xmlns="http://uri.barcapint.com/BarCapML"
               xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               <trade>
                   <tradeHeader>
                       <tradeId>
                           <alternateId type="summitTTSProductCode">34378479B</alternateId>
                       </tradeId>
                   </tradeHeader>
               </trade>
           </BCTrade>'''

# Call the function to extract summitTTSProductCode
extracted_value = extract_summitTTSProductCode(test_xml)
print(f"Extracted summitTTSProductCode: {extracted_value}")
